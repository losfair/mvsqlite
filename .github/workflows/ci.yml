name: build
on:
  push:
  schedule:
  - cron: '10 * * * *'
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Rust Build Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: cfg-v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
      - name: Build (mvstore)
        run: cargo build --release -p mvstore
      - name: Build (mvsqlite)
        run: cargo build --release -p mvsqlite
      - name: Build (mvsqlite-preload)
        run: make -C ./mvsqlite-preload
      - name: Build (mvstore-stress)
        run: cargo build --release -p mvstore-stress
      - name: Collect binaries
        run: |
          set -e
          mkdir build
          cd build
          cp ../target/release/mvstore ./
          cp ../target/release/mvstore-stress ./
          cp ../mvsqlite-preload/libmvsqlite_preload.so ./
          find . -type f -exec sha256sum '{}' ';'
      - name: Push binaries
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build
  build-deb:
    name: Build DEB
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          cargo install cargo-deb
      - name: Build mvstore
        run: cd mvstore && cargo deb && cd .. && mkdir deb && cp ./target/debian/*.deb ./deb/
      - name: Push
        uses: actions/upload-artifact@v3
        with:
          name: deb
          path: ./deb
  stress:
    name: mvstore stress test
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-server_7.1.17-1_amd64.deb --output fdb-server.deb
          sudo dpkg -i fdb-server.deb
      - name: Fetch binaries
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build
      - name: Run it
        run: |
          set -e
          chmod +x ./build/mvstore ./build/mvstore-stress
          export RUST_LOG=info
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m &
          sleep 1
          curl http://localhost:7001/api/create_namespace -d '{"key":"stress","metadata":""}'
          RUST_LOG=error,mvstore_stress=info ./build/mvstore-stress --concurrency 50 --data-plane http://localhost:7000 --admin-api http://localhost:7001 --iterations 1000 --ns-key stress --pages 1000
  stress-small-gc-batch:
    name: mvstore stress test (small gc batch)
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-server_7.1.17-1_amd64.deb --output fdb-server.deb
          sudo dpkg -i fdb-server.deb
      - name: Fetch binaries
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build
      - name: Run it
        run: |
          set -e
          chmod +x ./build/mvstore ./build/mvstore-stress
          export RUST_LOG=info
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m \
            --knob-gc-scan-batch-size 50 &
          sleep 1
          curl http://localhost:7001/api/create_namespace -d '{"key":"stress","metadata":""}'
          RUST_LOG=error,mvstore_stress=info ./build/mvstore-stress --concurrency 50 --data-plane http://localhost:7000 --admin-api http://localhost:7001 --iterations 1000 --ns-key stress --pages 1000
  stress-gc-nofresh:
    name: mvstore stress test (gc without fresh time check)
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-server_7.1.17-1_amd64.deb --output fdb-server.deb
          sudo dpkg -i fdb-server.deb
      - name: Fetch binaries
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build
      - name: Run it
        run: |
          set -e
          chmod +x ./build/mvstore ./build/mvstore-stress
          export RUST_LOG=info
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m \
            --knob-gc-fresh-page-ttl-secs 0 &
          sleep 1
          curl http://localhost:7001/api/create_namespace -d '{"key":"stress","metadata":""}'
          RUST_LOG=error,mvstore_stress=info ./build/mvstore-stress --concurrency 50 --data-plane http://localhost:7000 --admin-api http://localhost:7001 --iterations 1000 --ns-key stress --pages 1000 \
            --disable-ryw --permit-410
  stress-buggify:
    name: mvstore stress test (buggify)
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-server_7.1.17-1_amd64.deb --output fdb-server.deb
          sudo dpkg -i fdb-server.deb
      - name: Fetch binaries
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build
      - name: Run it
        run: |
          set -e
          chmod +x ./build/mvstore ./build/mvstore-stress
          export RUST_LOG=info
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m &
          sleep 1
          curl http://localhost:7001/api/create_namespace -d '{"key":"stress","metadata":""}'
          killall -9 mvstore
          sleep 1
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m --fdb-buggify &
          sleep 1
          RUST_LOG=error,mvstore_stress=info ./build/mvstore-stress --concurrency 50 --data-plane http://localhost:7000 --admin-api http://localhost:7001 --iterations 1000 --ns-key stress --pages 1000
  sqlite-speedtest1:
    name: SQLite benchmark (speedtest1)
    runs-on: ubuntu-20.04
    needs:
    - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          set -e
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-clients_7.1.17-1_amd64.deb --output fdb-client.deb
          sudo dpkg -i fdb-client.deb
          curl -L https://github.com/apple/foundationdb/releases/download/7.1.17/foundationdb-server_7.1.17-1_amd64.deb --output fdb-server.deb
          sudo dpkg -i fdb-server.deb
      - name: Fetch binaries
        uses: actions/download-artifact@v2
        with:
          name: build
          path: ./build
      - name: Run it
        run: |
          set -e
          chmod +x ./build/mvstore
          export RUST_LOG=info
          ./build/mvstore --data-plane 127.0.0.1:7000 --admin-api 127.0.0.1:7001 --metadata-prefix mvstore-test --raw-data-prefix m &
          sleep 1
          curl http://localhost:7001/api/create_namespace -d '{"key":"test","metadata":""}'
          git clone https://github.com/sqlite/sqlite
          cd sqlite
          git checkout version-3.31.1 # ubuntu 20.04
          git apply ../res/ci/sqlite.patch
          gcc -O2 -o speedtest1 test/speedtest1.c -lsqlite3
          ./speedtest1 ./test.db
          LD_PRELOAD=../build/libmvsqlite_preload.so RUST_LOG=error ./speedtest1 test
  release:
    name: Release
    needs:
    - build
    - stress
    - stress-buggify
    - stress-small-gc-batch
    - stress-gc-nofresh
    - build-deb
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: build
        path: ./build
    - uses: actions/download-artifact@v2
      with:
        name: deb
        path: ./deb
    - uses: softprops/action-gh-release@v1
      with:
        files: |
          build/mvstore
          build/libmvsqlite_preload.so
          deb/*.deb
        prerelease: true
